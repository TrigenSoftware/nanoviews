name: Checks
on:
  pull_request:
    branches:
      - main
jobs:
  list-workspaces:
    runs-on: ubuntu-latest
    name: list workspaces
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - id: set-matrix
        run: node -e "console.log('::set-output name=matrix::' + JSON.stringify(fs.readdirSync('packages')))"
  size:
    runs-on: ubuntu-latest
    needs: list-workspaces
    strategy:
      matrix:
        workspace:
          - nanoviews
    name: ${{ matrix.workspace }} / size-limit
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'pnpm'
      - name: Check size
        uses: andresz1/size-limit-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          package_manager: pnpm
          directory: packages/${{ matrix.workspace }}/
  editorconfig:
    runs-on: ubuntu-latest
    name: editorconfig
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Check editorconfig
        uses: editorconfig-checker/action-editorconfig-checker@main
  package-json:
    runs-on: ubuntu-latest
    name: package.json
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'pnpm'
      - name: Check package.json files
        run: pnpm --package=@trigen/lint-package-json dlx lint-package-json --monorepo
